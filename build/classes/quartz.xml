<?xml version="1.0" encoding="UTF-8"?>
<job-scheduling-data xmlns="http://www.quartz-scheduler.org/xml/JobSchedulingData"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.quartz-scheduler.org/xml/JobSchedulingData http://www.quartz-scheduler.org/xml/job_scheduling_data_2_0.xsd"
    version="2.0">
    
    <pre-processing-commands>
        <delete-jobs-in-group>*</delete-jobs-in-group>  <!-- clear all jobs in scheduler -->
        <delete-triggers-in-group>*</delete-triggers-in-group> <!-- clear all triggers in scheduler -->
    </pre-processing-commands>
    
    <processing-directives>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this file), overwrite them -->
        <overwrite-existing-data>true</overwrite-existing-data>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this file), and over-write is false, ignore them rather then generating an error -->
        <ignore-duplicates>false</ignore-duplicates> 
    </processing-directives>
    
    <schedule>
	    
	    <job>
	        <!-- 未刷卡通知 -->
	        <name>AMSignWarn</name>
	        <job-class>quartz.empl.AMSignWarn</job-class>
	    </job>
	    
	    <!-- 每小時統一執行工作>
	    <job>
	        <name>TaskHour</name>
	        <job-class>quartz.TaskHour</job-class>
	    </job-->
	    
	    <job>
	        <!-- 每日統一執行工作 -->
	        <name>TaskDaily</name>
	        <job-class>quartz.TaskDaily</job-class>
	    </job>
	    
	    <job>
	        <!-- 每週統一執行工作 -->
	        <name>TaskWeekly</name>
	        <job-class>quartz.TaskWeekly</job-class>
	    </job>
	    
	    <job>
	        <!-- 每日作業報告 -->
	        <name>ReportJobs</name>
	        <job-class>quartz.sys.ReportJobs</job-class>
	    </job>
	    
	    <job>
	        <!-- 資料庫備份 -->
	        <name>BackupDBJobs</name>
	        <job-class>quartz.BackupDB</job-class>
	    </job>
	    
	    <!-- 資料庫連線測試 -->
	    <!-- job>
	        <name>TestDBJobs</name>
	        <job-class>quartz.sys.TestDBJobs</job-class>
	    </job-->
	    
	    <!--trigger>
	        <cron>
	            <name>TaskHourTrigger</name>	            
	            <job-name>TaskHour</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0 0 */1 * * ? </cron-expression>
	        </cron>
	    </trigger-->
	    
	    <trigger>
	        <cron>
	            <name>ReportJobsTrigger</name>	            
	            <job-name>ReportJobs</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0 0 8 * * ?</cron-expression>
	        </cron>
	    </trigger>
	    
	    <trigger>
	        <cron>
	            <name>AMSignWarnTriggerAM</name>	            
	            <job-name>AMSignWarn</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0 0 10 * * ?</cron-expression>
	        </cron>
	    </trigger>
	    
	    <trigger>
	        <cron>
	            <name>AMSignWarnTriggerPM</name>	            
	            <job-name>AMSignWarn</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0 0 15 * * ?</cron-expression>
	        </cron>
	    </trigger>		    	    
	    
	    <trigger>
	        <cron>
	            <name>TaskDailyTrigger</name>	            
	            <job-name>TaskDaily</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0 0 6 * * ?</cron-expression>
	        </cron>
	    </trigger>
	    
	    <trigger>
	        <cron>
	            <name>TaskWeeklyTrigger</name>	            
	            <job-name>TaskWeekly</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0 30 6 ? * FRI</cron-expression>
	        </cron>
	    </trigger>
	    
	    
	    <trigger>
	        <cron>
	            <name>BackupDB</name>	            
	            <job-name>BackupDBJobs</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0 0 4 * * ?</cron-expression>
	        </cron>
	    </trigger>
	    	    
	    <!--trigger>
	        <cron>
	            <name>TestDBJobsTrigger</name>	            
	            <job-name>TestDBJobs</job-name>	            
	            <misfire-instruction>MISFIRE_INSTRUCTION_SMART_POLICY</misfire-instruction>
	            <cron-expression>0/1 * * * * ?</cron-expression>
	        </cron>
	    </trigger-->
	    
	    
	    
    </schedule>    
</job-scheduling-data>